{"ast":null,"code":"import axios from \"axios\";\nimport { USER_DETAILS_REQUEST, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/devanshi/proshop/frontend/src/actions/userActions.js"],"names":["axios","USER_DETAILS_REQUEST","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { USER_DETAILS_REQUEST, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstants\"\n\nexport const login= (email,password)=>async(dispatch)=>{\n    try {\n        dispatch({\n            type:USER_LOGIN_REQUEST\n        })\n\n        const config={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const {data}=await axios.post('/api/users/login',{email,password},config)\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo',JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type:USER_LOGIN_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const logout=()=>(dispatch)=>{\n    localStorage.removeItem('userInfo')\n    dispatch({type:USER_LOGOUT})\n}\n\nexport const register= (name,email,password)=>async(dispatch)=>{\n    try {\n        dispatch({\n            type:USER_REGISTER_REQUEST,\n        })\n\n        const config={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n\n        const {data}=await axios.post('/api/users',{name,email,password},config)\n        dispatch({\n            type:USER_REGISTER_SUCCESS,\n            payload:data\n        })\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo',JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type:USER_REGISTER_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const getUserDetails= (id)=>async(dispatch,getState)=>{\n    try {\n        dispatch({\n            type:USER_DETAILS_REQUEST,\n        })\n\n        const {userLogin:{userInfo}}=getState()\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                Authorization:`Bearer ${userInfo.token}`,\n            },\n        }\n\n        const {data}=await axios.get('/api/users',{name,email,password},config)\n        dispatch({\n            type:USER_REGISTER_SUCCESS,\n            payload:data\n        })\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo',JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type:USER_REGISTER_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}