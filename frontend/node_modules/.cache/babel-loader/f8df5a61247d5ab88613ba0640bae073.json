{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers.js';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/devanshi/proshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,kBAAR,EAA2BC,qBAA3B,QAAuD,+BAAvD;AACA,SAAQC,WAAR,QAA2B,yBAA3B;AAEA,MAAMC,OAAO,GAACP,eAAe,CAAC;AAC1BQ,EAAAA,WAAW,EAACJ,kBADc;AAE1BK,EAAAA,cAAc,EAACJ,qBAFW;AAG1BK,EAAAA,IAAI,EAACJ;AAHqB,CAAD,CAA7B;AAMA,MAAMK,oBAAoB,GAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAA/G;AACA,MAAMG,YAAY,GAAC;AACfN,EAAAA,IAAI,EAAC;AAACO,IAAAA,SAAS,EAACN;AAAX;AADU,CAAnB;AAIA,MAAMO,UAAU,GAAC,CAAChB,KAAD,CAAjB;AAEA,MAAMiB,KAAK,GAACpB,WAAW,CAACQ,OAAD,EAASS,YAAT,EAAsBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAAzC,CAAvB;AACA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {productListReducer,productDetailsReducer} from './reducers/productReducers.js'\nimport {cartReducer } from './reducers/cartReducers'\n\nconst reducer=combineReducers({\n    productList:productListReducer,\n    productDetails:productDetailsReducer,\n    cart:cartReducer,\n})\n\nconst cartItemsFromStorage=localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst initialState={\n    cart:{cartItems:cartItemsFromStorage,}\n}\n\nconst middleware=[thunk]\n\nconst store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\nexport default store"]},"metadata":{},"sourceType":"module"}