{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { OrderCreateReducer, OrderDetailsReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: OrderCreateReducer,\n  orderDetails: order\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/devanshi/proshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","OrderCreateReducer","OrderDetailsReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","order","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,kBAAR,EAA2BC,qBAA3B,QAAuD,4BAAvD;AACA,SAAQC,WAAR,QAA2B,yBAA3B;AACA,SAAQC,gBAAR,EAAyBC,mBAAzB,EAA6CC,kBAA7C,EAAgEC,wBAAhE,QAA+F,yBAA/F;AACA,SAAQC,kBAAR,EAA2BC,mBAA3B,QAAqD,0BAArD;AAEA,MAAMC,OAAO,GAACb,eAAe,CAAC;AAC1Bc,EAAAA,WAAW,EAACV,kBADc;AAE1BW,EAAAA,cAAc,EAACV,qBAFW;AAG1BW,EAAAA,IAAI,EAACV,WAHqB;AAI1BW,EAAAA,SAAS,EAACV,gBAJgB;AAK1BW,EAAAA,YAAY,EAACV,mBALa;AAM1BW,EAAAA,WAAW,EAACV,kBANc;AAO1BW,EAAAA,iBAAiB,EAACV,wBAPQ;AAQ1BW,EAAAA,WAAW,EAACV,kBARc;AAS1BW,EAAAA,YAAY,EAACC;AATa,CAAD,CAA7B;AAYA,MAAMC,oBAAoB,GAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAA/G;AACA,MAAMG,mBAAmB,GAACJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA5G;AACA,MAAMI,0BAA0B,GAACL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAAjI;AAEA,MAAMK,YAAY,GAAC;AACff,EAAAA,IAAI,EAAC;AAACgB,IAAAA,SAAS,EAACR,oBAAX;AACLS,IAAAA,eAAe,EAACH;AADX,GADU;AAIfb,EAAAA,SAAS,EAAC;AAACiB,IAAAA,QAAQ,EAACL;AAAV;AAJK,CAAnB;AAOA,MAAMM,UAAU,GAAC,CAACjC,KAAD,CAAjB;AAEA,MAAMkC,KAAK,GAACrC,WAAW,CAACc,OAAD,EAASkB,YAAT,EAAsB5B,mBAAmB,CAACF,eAAe,CAAC,GAAGkC,UAAJ,CAAhB,CAAzC,CAAvB;AACA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {productListReducer,productDetailsReducer} from './reducers/productReducers'\nimport {cartReducer } from './reducers/cartReducers'\nimport {userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer} from './reducers/userReducers'\nimport {OrderCreateReducer,OrderDetailsReducer} from './reducers/orderReducers'\n\nconst reducer=combineReducers({\n    productList:productListReducer,\n    productDetails:productDetailsReducer,\n    cart:cartReducer,\n    userLogin:userLoginReducer,\n    userRegister:userRegisterReducer,\n    userDetails:userDetailsReducer,\n    userUpdateProfile:userUpdateProfileReducer,\n    orderCreate:OrderCreateReducer,\n    orderDetails:order\n})\n\nconst cartItemsFromStorage=localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst userInfoFromStorage=localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\nconst shippingAddressFromStorage=localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState={\n    cart:{cartItems:cartItemsFromStorage,\n    shippingAddress:shippingAddressFromStorage\n    },\n    userLogin:{userInfo:userInfoFromStorage},\n}\n\nconst middleware=[thunk]\n\nconst store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\nexport default store"]},"metadata":{},"sourceType":"module"}