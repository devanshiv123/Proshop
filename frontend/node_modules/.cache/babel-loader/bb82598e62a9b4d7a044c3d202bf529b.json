{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { OrderCreateReducer, OrderDetailsReducer, OrderPayReducer, OrderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: OrderCreateReducer,\n  orderDetails: OrderDetailsReducer,\n  orderPay: OrderPayReducer,\n  orderListMy: OrderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/devanshi/proshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","OrderCreateReducer","OrderDetailsReducer","OrderPayReducer","OrderListMyReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,kBAAR,EAA2BC,qBAA3B,QAAuD,4BAAvD;AACA,SAAQC,WAAR,QAA2B,yBAA3B;AACA,SAAQC,gBAAR,EAAyBC,mBAAzB,EAA6CC,kBAA7C,EAAgEC,wBAAhE,EAAyFC,eAAzF,EAAyGC,iBAAzG,EAA2HC,iBAA3H,QACK,yBADL;AAEA,SAAQC,kBAAR,EAA2BC,mBAA3B,EAA+CC,eAA/C,EAA+DC,kBAA/D,QAAwF,0BAAxF;AAEA,MAAMC,OAAO,GAAClB,eAAe,CAAC;AAC1BmB,EAAAA,WAAW,EAACf,kBADc;AAE1BgB,EAAAA,cAAc,EAACf,qBAFW;AAG1BgB,EAAAA,IAAI,EAACf,WAHqB;AAI1BgB,EAAAA,SAAS,EAACf,gBAJgB;AAK1BgB,EAAAA,YAAY,EAACf,mBALa;AAM1BgB,EAAAA,WAAW,EAACf,kBANc;AAO1BgB,EAAAA,iBAAiB,EAACf,wBAPQ;AAQ1BgB,EAAAA,QAAQ,EAACf,eARiB;AAS1BgB,EAAAA,UAAU,EAACf,iBATe;AAU1BgB,EAAAA,UAAU,EAACf,iBAVe;AAW1BgB,EAAAA,WAAW,EAACf,kBAXc;AAY1BgB,EAAAA,YAAY,EAACf,mBAZa;AAa1BgB,EAAAA,QAAQ,EAACf,eAbiB;AAc1BgB,EAAAA,WAAW,EAACf;AAdc,CAAD,CAA7B;AAiBA,MAAMgB,oBAAoB,GAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAA/G;AACA,MAAMG,mBAAmB,GAACJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA5G;AACA,MAAMI,0BAA0B,GAACL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAAjI;AAEA,MAAMK,YAAY,GAAC;AACfnB,EAAAA,IAAI,EAAC;AAACoB,IAAAA,SAAS,EAACR,oBAAX;AACLS,IAAAA,eAAe,EAACH;AADX,GADU;AAIfjB,EAAAA,SAAS,EAAC;AAACqB,IAAAA,QAAQ,EAACL;AAAV;AAJK,CAAnB;AAOA,MAAMM,UAAU,GAAC,CAAC1C,KAAD,CAAjB;AAEA,MAAM2C,KAAK,GAAC9C,WAAW,CAACmB,OAAD,EAASsB,YAAT,EAAsBrC,mBAAmB,CAACF,eAAe,CAAC,GAAG2C,UAAJ,CAAhB,CAAzC,CAAvB;AACA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {productListReducer,productDetailsReducer} from './reducers/productReducers'\nimport {cartReducer } from './reducers/cartReducers'\nimport {userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer,userListReducer,userDeleteReducer,userUpdateReducer} \nfrom './reducers/userReducers'\nimport {OrderCreateReducer,OrderDetailsReducer,OrderPayReducer,OrderListMyReducer} from './reducers/orderReducers'\n\nconst reducer=combineReducers({\n    productList:productListReducer,\n    productDetails:productDetailsReducer,\n    cart:cartReducer,\n    userLogin:userLoginReducer,\n    userRegister:userRegisterReducer,\n    userDetails:userDetailsReducer,\n    userUpdateProfile:userUpdateProfileReducer,\n    userList:userListReducer,\n    userDelete:userDeleteReducer,\n    userUpdate:userUpdateReducer,\n    orderCreate:OrderCreateReducer,\n    orderDetails:OrderDetailsReducer,\n    orderPay:OrderPayReducer,\n    orderListMy:OrderListMyReducer\n})\n\nconst cartItemsFromStorage=localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst userInfoFromStorage=localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\nconst shippingAddressFromStorage=localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState={\n    cart:{cartItems:cartItemsFromStorage,\n    shippingAddress:shippingAddressFromStorage\n    },\n    userLogin:{userInfo:userInfoFromStorage},\n}\n\nconst middleware=[thunk]\n\nconst store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\nexport default store"]},"metadata":{},"sourceType":"module"}