{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deliverOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/devanshi/proshop/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","deliverOrder","listMyOrders","listOrders"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL} from '../constants/orderConstants'\n\nexport const createOrder= (order)=>async(dispatch,getState)=>{\n    try {\n        dispatch({\n            type:ORDER_CREATE_REQUEST,\n        })\n\n        const {userLogin:{userInfo}}=getState()\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                Authorization:`Bearer ${userInfo.token}`,\n            },\n        }\n\n        const {data}=await axios.post(`/api/orders`,order,config)\n        dispatch({\n            type:ORDER_CREATE_SUCCESS,\n            payload:data\n        })\n\n    \n    } catch (error) {\n        dispatch({\n            type:ORDER_CREATE_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const getOrderDetails= (id)=>async(dispatch,getState)=>{\n    try {\n        dispatch({\n            type:ORDER_DETAILS_REQUEST,\n        })\n\n        const {userLogin:{userInfo}}=getState()\n        const config={\n            headers:{\n                Authorization:`Bearer ${userInfo.token}`,\n            },\n        }\n\n        const {data}=await axios.get(`/api/orders/${id}`,config)\n        dispatch({\n            type:ORDER_DETAILS_SUCCESS,\n            payload:data\n        })\n\n    \n    } catch (error) {\n        dispatch({\n            type:ORDER_DETAILS_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const payOrder= (orderId,paymentResult)=>async(dispatch,getState)=>{\n    try {\n        dispatch({\n            type:ORDER_PAY_REQUEST,\n        })\n\n        const {userLogin:{userInfo}}=getState()\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                Authorization:`Bearer ${userInfo.token}`,\n            },\n        }\n\n        const {data}=await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config)\n        dispatch({\n            type:ORDER_PAY_SUCCESS,\n            payload:data\n        })\n\n    \n    } catch (error) {\n        dispatch({\n            type:ORDER_PAY_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const deliverOrder= (orderId,paymentResult)=>async(dispatch,getState)=>{\n    try {\n        dispatch({\n            type:ORDER_PAY_REQUEST,\n        })\n\n        const {userLogin:{userInfo}}=getState()\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                Authorization:`Bearer ${userInfo.token}`,\n            },\n        }\n\n        const {data}=await axios.put(`/api/orders/${orderId}/pay`,paymentResult,config)\n        dispatch({\n            type:ORDER_PAY_SUCCESS,\n            payload:data\n        })\n\n    \n    } catch (error) {\n        dispatch({\n            type:ORDER_PAY_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listMyOrders= ()=>async(dispatch,getState)=>{\n    try {\n        dispatch({\n            type:ORDER_LIST_MY_REQUEST,\n        })\n\n        const {userLogin:{userInfo}}=getState()\n        const config={\n            headers:{\n                Authorization:`Bearer ${userInfo.token}`,\n            },\n        }\n\n        const {data}=await axios.get(`/api/orders/myorders`,config)\n        dispatch({\n            type:ORDER_LIST_MY_SUCCESS,\n            payload:data\n        })\n\n    \n    } catch (error) {\n        dispatch({\n            type:ORDER_LIST_MY_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listOrders= ()=>async(dispatch,getState)=>{\n    try {\n        dispatch({\n            type:ORDER_LIST_REQUEST,\n        })\n\n        const {userLogin:{userInfo}}=getState()\n        const config={\n            headers:{\n                Authorization:`Bearer ${userInfo.token}`,\n            },\n        }\n\n        const {data}=await axios.get(`/api/orders`,config)\n        dispatch({\n            type:ORDER_LIST_SUCCESS,\n            payload:data\n        })\n\n    \n    } catch (error) {\n        dispatch({\n            type:ORDER_LIST_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}