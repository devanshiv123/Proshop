{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/devanshi/proshop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{savePaymentMethod}from'../actions/cartActions';var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history.push('/shipping');}var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"PayPal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default PaymentScreen;","map":{"version":3,"sources":["/home/devanshi/proshop/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"8OAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,IAAR,CAAaC,MAAb,CAAoBC,GAApB,KAA8B,iBAA9B,CACA,OAAQC,WAAR,CAAoBC,WAApB,KAAsC,aAAtC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAAQC,iBAAR,KAAgC,wBAAhC,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAe,IAAbC,CAAAA,OAAa,MAAbA,OAAa,CACjC,GAAMC,CAAAA,IAAI,CAACN,WAAW,CAAC,SAAAO,KAAK,QAAEA,CAAAA,KAAK,CAACD,IAAR,EAAN,CAAtB,CADiC,GAE1BE,CAAAA,eAF0B,CAETF,IAFS,CAE1BE,eAF0B,CAIjC,GAAG,CAACA,eAAJ,CAAoB,CAChBH,OAAO,CAACI,IAAR,CAAa,WAAb,EACH,CANgC,cAOMd,QAAQ,CAAC,QAAD,CAPd,wCAO1Be,aAP0B,eAOZC,gBAPY,eASjC,GAAMC,CAAAA,QAAQ,CAACb,WAAW,EAA1B,CAEA,GAAMc,CAAAA,aAAa,CAAC,QAAdA,CAAAA,aAAc,CAACC,CAAD,CAAK,CACrBA,CAAC,CAACC,cAAF,GACAH,QAAQ,CAACT,iBAAiB,CAACO,aAAD,CAAlB,CAAR,CACAL,OAAO,CAACI,IAAR,CAAa,aAAb,EACH,CAJD,CAKA,mBAAO,MAAC,aAAD,yBACH,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADG,cAEH,sCAFG,cAGH,MAAC,IAAD,EAAM,QAAQ,CAAEI,aAAhB,wBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADJ,cAGA,KAAC,GAAD,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,IAAI,CAAC,OAAjB,CAAyB,KAAK,CAAC,uBAA/B,CAAuD,EAAE,CAAC,QAA1D,CAAmE,IAAI,CAAC,eAAxE,CAAwF,KAAK,CAAC,QAA9F,CACA,OAAO,KADP,CACQ,QAAQ,CAAE,kBAACC,CAAD,QAAKH,CAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAArB,EADlB,EADJ,EAHA,GADJ,cAWI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBAXJ,GAHG,GAAP,CAmBH,CAnCD,CAqCA,cAAeb,CAAAA,aAAf","sourcesContent":["import React, {useState} from 'react'\nimport {Form,Button,Col} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport {savePaymentMethod} from '../actions/cartActions'\n\nconst PaymentScreen = ({history}) => {\n    const cart=useSelector(state=>state.cart)\n    const {shippingAddress}=cart\n\n    if(!shippingAddress){\n        history.push('/shipping')\n    }\n    const [paymentMethod,setPaymentMethod]=useState('PayPal')\n\n    const dispatch=useDispatch()\n\n    const submitHandler=(e)=>{\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n    return <FormContainer>\n        <CheckoutSteps step1 step2 step3/>\n        <h1>Payment Method</h1>\n        <Form onSubmit={submitHandler}>\n            <Form.Group>\n                <Form.Label as='legend'>Select Method</Form.Label>\n            \n            <Col>\n                <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal' name='paymentMethod' value='PayPal' \n                checked onChange={(e)=>setPaymentMethod(e.target.value)}></Form.Check>\n                {/* <Form.Check type='radio' label='Stripe' id='Stripe' name='paymentMethod' value='Stripe' \n                onChange={(e)=>setPaymentMethod(e.target.value)}></Form.Check> */}\n            </Col>\n            </Form.Group>\n            <Button type='submit' variant='primary'>\n                Continue\n            </Button>\n        </Form>\n    </FormContainer>\n}\n\nexport default PaymentScreen\n"]},"metadata":{},"sourceType":"module"}